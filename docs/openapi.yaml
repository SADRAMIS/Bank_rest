openapi: 3.0.3
info:
  title: Bank Cards Management API
  description: API для управления банковскими картами
  version: 1.0.0
  contact:
    name: Bank Cards Team
    email: support@bankcards.com

servers:
  - url: http://localhost:8080
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    CardDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cardNumber:
          type: string
          description: Маскированный номер карты
        owner:
          type: string
        expiryDate:
          type: string
          format: date
        status:
          type: string
          enum: [ACTIVE, BLOCKED, EXPIRED]
        balance:
          type: number
          format: decimal
        userId:
          type: integer
          format: int64
    
    CreateCardDto:
      type: object
      required:
        - owner
        - expiryDate
      properties:
        owner:
          type: string
        expiryDate:
          type: string
          format: date
        initialBalance:
          type: number
          format: decimal
          default: 0.00
    
    TransactionDto:
      type: object
      required:
        - fromCardId
        - toCardId
        - amount
      properties:
        id:
          type: integer
          format: int64
        fromCardId:
          type: integer
          format: int64
        toCardId:
          type: integer
          format: int64
        amount:
          type: number
          format: decimal
        status:
          type: string
          enum: [PENDING, COMPLETED, FAILED, CANCELLED]
        createdAt:
          type: string
          format: date-time
        processedAt:
          type: string
          format: date-time
    
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [ADMIN, USER]
        enabled:
          type: boolean
    
    AuthDto:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    
    JwtResponseDto:
      type: object
      properties:
        token:
          type: string
        type:
          type: string
          default: "Bearer"
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        role:
          type: string

paths:
  /api/auth/login:
    post:
      summary: Аутентификация пользователя
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDto'
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponseDto'
        '401':
          description: Неверные учетные данные

  /api/auth/register:
    post:
      summary: Регистрация нового пользователя
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '200':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'

  /api/cards:
    get:
      summary: Получение карт пользователя
      tags:
        - Cards
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [ACTIVE, BLOCKED, EXPIRED]
        - name: owner
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Список карт пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/CardDto'
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
                  size:
                    type: integer
                  number:
                    type: integer

    post:
      summary: Создание новой карты (только для ADMIN)
      tags:
        - Cards
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCardDto'
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Карта успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDto'

  /api/cards/{cardId}:
    get:
      summary: Получение информации о карте
      tags:
        - Cards
      security:
        - bearerAuth: []
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Информация о карте
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDto'

  /api/cards/{cardId}/status:
    put:
      summary: Обновление статуса карты
      tags:
        - Cards
      security:
        - bearerAuth: []
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum: [ACTIVE, BLOCKED]
      responses:
        '200':
          description: Статус карты обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDto'

  /api/transactions:
    post:
      summary: Создание транзакции между картами
      tags:
        - Transactions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionDto'
      responses:
        '200':
          description: Транзакция создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDto'

    get:
      summary: Получение транзакций пользователя
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [PENDING, COMPLETED, FAILED, CANCELLED]
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Список транзакций пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/TransactionDto'
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
                  size:
                    type: integer
                  number:
                    type: integer
